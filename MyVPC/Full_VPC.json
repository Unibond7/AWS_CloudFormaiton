{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Mappings" : {
    "VPCRange" : {
      "SubnetCidrs" : {
        "PublicSubnet" : "10.0.1.0/24",
        "PrivateSubnet" : "10.0.2.0/24"
      }
    }
  },
  "Resources" : {
    "BaseVPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : "10.0.0.0/16",
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Fn::Join" : ["", [{ "Ref" :  "AWS::StackName" }, "-VPC" ]] } }
        ]
      }
    },
    "PublicSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "CidrBlock" : { "Fn::FindInMap" : [ "VPCRange", "SubnetCidrs", "PublicSubnet"] },
        "VpcId" : { "Ref" : "BaseVPC" },
        "AvailabilityZone" : { "Fn::Select": [ "0", { "Fn::GetAZs": { "Ref": "AWS::Region" } } ] },
        "MapPublicIpOnLaunch" : "true",
        "Tags" : [
          { "Key": "Name", "Value": { "Fn::Join" : ["", [{ "Ref" : "AWS::StackName" }, "-PublicSubNet"]] } },
          { "Key": "Network", "Value": "public" }
        ]
      }
    },
    "PrivateSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "CidrBlock" : { "Fn::FindInMap" : [ "VPCRange", "SubnetCidrs", "PrivateSubnet"] },
        "VpcId" : { "Ref" : "BaseVPC" },
        "AvailabilityZone" : { "Fn::Select": [ "1", { "Fn::GetAZs": { "Ref": "AWS::Region" } } ] },
        "MapPublicIpOnLaunch" : "false",
        "Tags" : [
          { "Key": "Name", "Value": { "Fn::Join" : ["", [{ "Ref" : "AWS::StackName" }, "-PrivateSubNet"]] } },
          { "Key": "Network", "Value": "private" }
        ]
      }
    },
    "IGWBase" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key": "Name", "Value": { "Fn::Join" : ["", [{ "Ref" : "AWS::StackName" }, "-IGW"]] } }
        ]
      }
    },
    "VPCIGWBase" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "InternetGatewayId" : { "Ref" : "IGWBase" },
        "VpcId" : { "Ref" : "BaseVPC" }
      }
    },
    "RouteTablePublic" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "BaseVPC" },
        "Tags" : [
          { "Key": "Name", "Value": { "Fn::Join" : ["", [{ "Ref" : "AWS::StackName" }, "-PublicRT"]] } }
        ]
      }
    },
    "RoutePublicDefault" : {
      "DependsOn": [ "VPCIGWBase" ],
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "RouteTablePublic" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "IGWBase" }
      }
    },
    "RouteAssociationPublicDefault" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet"},
        "RouteTableId" : { "Ref" : "RouteTablePublic" }
      }
    },
    "RouteTablePrivate" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "BaseVPC" },
        "Tags" : [
          { "Key": "Name", "Value": { "Fn::Join" : ["", [{ "Ref" : "AWS::StackName" }, "-PrivateRT"]] } }
        ]
      }
    },
    "RouteAssociationPrivateDefault" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PrivateSubnet"},
        "RouteTableId" : { "Ref" : "RouteTablePrivate" }
      }
    },
    "NetworkACL" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : { "Ref" : "VPCID" },
      }
    },
    "NetACLSubnetAssoc" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet" },
        "NetworkAclId" : { "Ref" : "NetworkACL" }
      }
    },
    "NetworkACLEntryHTTPOut" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "NetworkACL" },
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "80", "To" : "80" }
      }
    },
    "NetworkACLEntryHTTPIn" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "NetworkACL" },
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "80", "To" : "80" }
      }
    },
    "NetworkACLEntryHTTPSOut" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "NetworkACL" },
        "RuleNumber" : "200",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "443", "To" : "443" }
      }
    },
    "NetworkACLEntryHTTPSIn" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "NetworkACL" },
        "RuleNumber" : "200",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "443", "To" : "443" }
      }
    },
    "NetworkACLEntrySSHOut" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "NetworkACL" },
        "RuleNumber" : "300",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "22", "To" : "22" }
      }
    },
    "NetworkACLEntrySSHIn" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "NetworkACL" },
        "RuleNumber" : "300",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "22", "To" : "22" }
      }
    },
    "NetworkACLEntryRDPOut" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "NetworkACL" },
        "RuleNumber" : "400",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "3389", "To" : "3389" }
      }
    },
    "NetworkACLEntryRDPIn" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "NetworkACL" },
        "RuleNumber" : "400",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "3389", "To" : "3389" }
      }
    },
    "NetworkACLEntryEphemeralOut" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "NetworkACL" },
        "RuleNumber" : "500",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "1024", "To" : "65535" }
      }
    },
    "NetworkACLEntryEphemeralIn" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "NetworkACL" },
        "RuleNumber" : "500",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "1024", "To" : "65535" }
      }
    },
    "NAT" : {
      "Type" : "AWS::EC2::NatGateway",
      "DependsOn" : "VPCIGWBase",
      "Properties" : {
        "AllocationId" : { "Fn::GetAtt" : ["EIPNAT", "AllocationId"]},
        "SubnetId" : { "Ref" : "PublicSubnet"}
      }
    },
    "EIPNAT" : {
      "Type" : "AWS::EC2::EIP",
      "Properties" : {
        "Domain" : "vpc"
      }
    },
    "NATRoute" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "RouteTablePrivate" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "NatGatewayId" : { "Ref" : "NAT" }
      }
    }
  },
  "Outputs": {
    "VPCID" : { "Value" : { "Ref" : "BaseVPC" } },
    "SubnetPublic" : { "Value" : { "Ref" : "PublicSubnet"} },
    "SubnetPrivate" : { "Value" : { "Ref" : "PrivateSubnet"} },
    "DefaultSG" : { "Value" : { "Fn::GetAtt" : ["BaseVPC", "DefaultSecurityGroup"] }}
  }
}
